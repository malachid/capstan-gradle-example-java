buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M2'
    }
}

group 'org.eoti.osv'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8

ext {
    junit4Version        = '4.12'
    junitVintageVersion  = '4.12.0-M2'
    junitPlatformVersion = '1.0.0-M2'
    junitJupiterVersion  = '5.0.0-M2'
    log4JVersion = '2.5'
}

repositories {
    mavenCentral()
}

dependencies {
    // Could have picked any JSON parser for this example. Chose GSON for this small test due to
    // http://blog.takipi.com/the-ultimate-json-library-json-simple-vs-gson-vs-jackson-vs-json/
    compile 'com.google.code.gson:gson:2.7'

    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // If you also want to support JUnit 3 and JUnit 4 tests
    testCompile("junit:junit:${junit4Version}")
    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Capstan Example for Java with Gradle',
                'Implementation-Version': version,
                'Main-Class': 'org.eoti.osv.Main',
                'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
    }
    exclude('external/**')
}

distributions {
    main {
        baseName = 'rootfs'
        contents {
            from {
                'src/main/resources/external'
            }
        }
    }
}

task buildRootFS(type: Copy, dependsOn: assembleDist) {
    from(zipTree(file("${buildDir}/distributions/rootfs-${version}.zip")))
    into(file("${buildDir}"))
}

task execute(type: JavaExec, dependsOn: buildRootFS) {
    // https://docs.gradle.org/current/dsl/org.gradle.api.tasks.JavaExec.html
    main = 'org.eoti.osv.Main'
    classpath = sourceSets.main.runtimeClasspath
    args 'build/rootfs-1.0-SNAPSHOT/config/staging.json'
}
